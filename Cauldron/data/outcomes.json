[
	{
		"regex": "A Debt was collected.*(pitch|hitt)er (?<target>.+)! Replaced by (.+) The Instability (chains|spreads) to (.+)'s (?<chainee>.+)!",
		"entities": [
			{
				"outcomeType": "DEBT_PAID",
				"entityType": "player",
				"captureName": "target"
			},
			{
				"outcomeType": "UNSTABLE_CHAINED",
				"entityType": "player",
				"captureName": "chainee"
			}
		]
	},
	{
		"regex": "(?<pitcher>.+) hits (?<hitter>.+) with a pitch! (.+) is now Unstable!",
		"entities": [
			{
				"outcomeType": "BEANED_HITTER",
				"entityType": "player",
				"captureName": "hitter"
			},
			{
				"outcomeType": "BEANED_PITCHER",
				"entityType": "player",
				"captureName": "pitcher"
			}
		]
	},
	{
		"regex": "The Blooddrain gurgled! (?<siphoner>.+) siphoned some of (?<siphonee>.+)'s .+ ability!",
		"entities": [
			{
				"outcomeType": "BLOOD_DRAIN_SIPHONER",
				"entityType": "player",
				"captureName": "siphoner"
			},
			{
				"outcomeType": "BLOOD_DRAIN_VICTIM",
				"entityType": "player",
				"captureName": "siphonee"
			}
		]
	},
	{
		"regex": "Reality begins to flicker...but (?<resister>.+) resists! (?<other>.+) is affect",
		"entities": [
			{
				"outcomeType": "FEEDBACK_BLOCKED",
				"entityType": "player",
				"captureName": "resister"
			},
			{
				"outcomeType": "FEEDBACK_BLOCKED",
				"entityType": "player",
				"captureName": "other"
			}
		]
	},
	{
		"regex": ".*incinerated.*(pitch|hitt)er (?<victim>.+)! Replaced by (.+)",
		"entities": [
			{
				"outcomeType": "INCINERATION",
				"entityType": "player",
				"captureName": "victim"
			}
		]
	},
	{
		"regex": "The Birds pecked (?<freed>.+) free!",
		"entities": [
			{
				"outcomeType": "SHELL_CRACKED",
				"entityType": "player",
				"captureName": "freed"
			}
		]
	},
	{
		"regex": "(?<partier>.+) is Partying!",
		"entities": [
			{
				"outcomeType": "PARTYING",
				"entityType": "player",
				"captureName": "partier"
			}
		]
	},
	{
		"regex": "Reverberations are at (\\w+) levels! (?<player>.+) is now .*",
		"entities": [
			{
				"outcomeType": "REVERB_PLAYER",
				"entityType": "player",
				"captureName": "player"
			}
		]
	},
	{
		"regex": ".*(pitch|hitt)er (?<eater>.+) swallowed.*had a yummy reaction!",
		"entities": [
			{
				"outcomeType": "PEANUT_GOOD",
				"entityType": "player",
				"captureName": "eater"
			}
		]
	},
	{
		"regex": ".*(pitch|hitt)er (?<eater>.+) swallowed.*had an allergic reaction!",
		"entities": [
			{
				"outcomeType": "PEANUT_BAD",
				"entityType": "player",
				"captureName": "eater"
			}
		]
	},
	{
		"regex": "(?<pitcher>.+) hits (?<hitter>.+) with a pitch! (.+) is now Flickering!",
		"entities": [
			{
				"outcomeType": "BEANED_FLICKERING_HITTER",
				"entityType": "player",
				"captureName": "hitter"
			},
			{
				"outcomeType": "BEANED_FLICKERING_PITCHER",
				"entityType": "player",
				"captureName": "pitcher"
			}
		]
	},
	{
		"regex": "(?<shelled>.+) is Shelled and cannot escape!",
		"entities": [
			{
				"outcomeType": "SHELLED_ATBAT",
				"entityType": "player",
				"captureName": "shelled"
			}
		]
	},
	{
		"regex": "[.!] (?<spicy>.+) is Red Hot!",
		"entities": [
			{
				"outcomeType": "RED_HOT",
				"entityType": "player",
				"captureName": "spicy"
			}
		]
	},
	{
		"regex": "[.!] (?<spicy>.+) is no longer Red Hot.",
		"entities": [
			{
				"outcomeType": "RED_HOT_ENDED",
				"entityType": "player",
				"captureName": "spicy"
			}
		]
	},
	{
		"regex": "(?<charmer>.+) charms (.+)! (.+) walks",
		"entities": [
			{
				"outcomeType": "CHARM_WALK",
				"entityType": "player",
				"captureName": "charmer"
			}
		]
	},
	{
		"regex": "(?<charmer>.+) charms (.+)! (.+) swings",
		"entities": [
			{
				"outcomeType": "CHARM_STRIKEOUT",
				"entityType": "player",
				"captureName": "charmer"
			}
		]
	},
	{
		"regex": "Rogue Umpire tried to incinerate Magic hitter (?<fireEater>.+), but .+ ate the flame! They became Magmatic!",
		"entities": [
			{
				"outcomeType": "MAGMATIC",
				"entityType": "player",
				"captureName": "fireEater"
			}
		]
	},
	{
		"regex": "The Blooddrain gurgled! (?<siphoner>.+) siphoned some of (?<siphonee>.+)'s defensive ability to add an Out!",
		"entities": [
			{
				"outcomeType": "BLOOD_DRAIN_SIPHON_ADD_OUT",
				"entityType": "player",
				"captureName": "siphoner"
			},
			{
				"outcomeType": "BLOOD_DRAIN_VICTIM",
				"entityType": "player",
				"captureName": "siphonee"
			}
		]
	},
	{
		"regex": "The Blooddrain gurgled! (?<siphoner>.+) siphoned some of (?<siphonee>.+)'s defensive ability to remove an Out!",
		"entities": [
			{
				"outcomeType": "BLOOD_DRAIN_SIPHON_REMOVE_OUT",
				"entityType": "player",
				"captureName": "siphoner"
			},
			{
				"outcomeType": "BLOOD_DRAIN_VICTIM",
				"entityType": "player",
				"captureName": "siphonee"
			}
		]
	},
	{
		"regex": "The Blooddrain gurgled! (?<siphoner>.+) siphoned some of (?<siphonee>.+)'s defensive ability to add a Strike!",
		"entities": [
			{
				"outcomeType": "BLOOD_DRAIN_SIPHON_ADD_STRIKE",
				"entityType": "player",
				"captureName": "siphoner"
			},
			{
				"outcomeType": "BLOOD_DRAIN_VICTIM",
				"entityType": "player",
				"captureName": "siphonee"
			}
		]
	},
	{
		"regex": "The Blooddrain gurgled! (?<siphoner>.+) siphoned some of (?<siphonee>.+)'s defensive ability to remove a Strike!",
		"entities": [
			{
				"outcomeType": "BLOOD_DRAIN_SIPHON_REMOVE_STRIKE",
				"entityType": "player",
				"captureName": "siphoner"
			},
			{
				"outcomeType": "BLOOD_DRAIN_VICTIM",
				"entityType": "player",
				"captureName": "siphonee"
			}
		]
	},
	{
		"regex": "The Blooddrain gurgled! (?<siphoner>.+) siphoned some of (?<siphonee>.+)'s defensive ability to add a Ball!",
		"entities": [
			{
				"outcomeType": "BLOOD_DRAIN_SIPHON_ADD_BALL",
				"entityType": "player",
				"captureName": "siphoner"
			},
			{
				"outcomeType": "BLOOD_DRAIN_VICTIM",
				"entityType": "player",
				"captureName": "siphonee"
			}
		]
	},
	{
		"regex": "The Blooddrain gurgled! (?<siphoner>.+) siphoned some of (?<siphonee>.+)'s defensive ability to remove a Ball!",
		"entities": [
			{
				"outcomeType": "BLOOD_DRAIN_SIPHON_REMOVE_BALL",
				"entityType": "player",
				"captureName": "siphoner"
			},
			{
				"outcomeType": "BLOOD_DRAIN_VICTIM",
				"entityType": "player",
				"captureName": "siphonee"
			}
		]
	},
	{
		"regex": "(?<friend>.+) calls upon their Friends! A murder of Crows ambush (?<victim>.+)!.*",
		"entities": [
			{
				"outcomeType": "MURDER_FRIEND",
				"entityType": "player",
				"captureName": "friend"
			},
			{
				"outcomeType": "MURDER_VICTIM",
				"entityType": "player",
				"captureName": "victim"
			}
		]
	}

]